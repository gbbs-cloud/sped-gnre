name: Rector Level Analysis

on:
  pull_request:

jobs:
  analyze-rector-levels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Analyze Rector Levels
        id: analyze
        run: |
          #!/bin/bash
          rector_file="rector.php"
          
          # Base Rector configuration with all levels at 0
          base_rector_config='<?php
          declare(strict_types=1);
          use Rector\Config\RectorConfig;
          return RectorConfig::configure()
              ->withPaths([ __DIR__ . "/lib", __DIR__ . "/testes" ])
              ->withPhpSets()
              ->withTypeCoverageLevel(0)
              ->withDeadCodeLevel(0)
              ->withCodeQualityLevel(0);'

          level_names=("TypeCoverage" "DeadCode" "CodeQuality")
          max_levels=(49 48 71)
          final_levels=()

          for i in {0..2}; do
            category_name=${level_names[$i]}
            category_max=${max_levels[$i]}
            highest_level=0

            echo "::group::Analyzing $category_name"

            # Reset codebase for each new category analysis
            git checkout -- lib/ testes/

            for level in $(seq 1 $category_max); do
              echo "Checking $category_name level $level..."
              
              # Generate rector-run.php for the current level of the current category
              current_rector_config=$(echo "$base_rector_config" | sed "s/with${category_name}Level(0)/with${category_name}Level($level)/")
              echo "$current_rector_config" > rector-run.php

              # Run Rector and capture its output and exit code
              set +e # Temporarily disable exit on error
              rector_output=$(./vendor/bin/rector process --config rector-run.php --no-progress-bar 2>&1)
              rector_exit_code=$?
              set -e # Re-enable exit on error

              tests_passed=false
              if [ $rector_exit_code -eq 0 ]; then
                echo "Rector made no changes for $category_name level $level. Skipping tests."
                tests_passed=true
              elif [ $rector_exit_code -eq 1 ]; then
                echo "Rector applied changes for $category_name level $level. Running tests..."
                if ./vendor/bin/phpunit > /dev/null 2>&1; then
                  tests_passed=true
                else
                  tests_passed=false
                fi
              else
                echo "Rector encountered an error (exit code $rector_exit_code) for $category_name level $level."
                echo "$rector_output" # Print Rector's error output
                tests_passed=false # Treat Rector errors as test failures
              fi

              if $tests_passed; then
                echo "Tests PASSED for $category_name level $level"
                highest_level=$level
              else
                echo "Tests FAILED for $category_name level $level"
                # Revert changes from the failed level and stop for this category.
                git checkout -- lib/ testes/
                break
              fi
            done
            
            final_levels+=("Highest successful level for $category_name: $highest_level")
            echo "::endgroup::"
          done

          rm rector-run.php

          echo "::set-output name=summary::$(IFS=$'\n'; echo "${final_levels[*]}")"

      - name: Report Max Levels
        run: |
          echo "Rector Level Analysis Results:"
          echo "${{ steps.analyze.outputs.summary }}"
